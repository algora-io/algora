<header class="bg-gray-900 text-white py-4 px-6 md:px-12">
  <nav class="flex justify-between items-center">
    <div class="text-2xl font-bold">Algora</div>
  </nav>
</header>

<section class="bg-gray-900 text-white py-16 px-6 md:px-12 flex flex-col md:flex-row justify-between items-start">
  <div class="md:w-1/2 mb-8 md:mb-0">
    <h1 class="text-4xl md:text-5xl font-bold leading-tight mb-4">
      Invest in <span class="text-blue-400">founders</span><br>
      building the <span class="text-red-400">future</span>
    </h1>
    <p class="text-gray-300 text-lg mb-8">
      Get equity and front row seats to the startups and small businesses you loveâ€”for as little as $100.
    </p>
    <div id="button-container" class="flex space-x-4">
      <button onclick="showOnboarding('companies')" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 px-6 rounded transition duration-300">
        Companies
      </button>
      <button onclick="showOnboarding('developers')" class="bg-transparent hover:bg-white hover:bg-opacity-10 text-white font-bold py-3 px-6 rounded border-2 border-white transition duration-300">
        Developers
      </button>
    </div>
    <div id="onboarding-section" class="hidden mt-8">
      <div id="first-question">
        <h3 class="text-xl font-bold mb-4">What do you want?</h3>
        <div class="space-y-4">
          <div class="flex items-center space-x-2">
            <input type="checkbox" id="option1" name="onboarding-option" class="custom-checkbox">
            <label for="option1">Option 1</label>
          </div>
          <div class="flex items-center space-x-2">
            <input type="checkbox" id="option2" name="onboarding-option" class="custom-checkbox">
            <label for="option2">Option 2</label>
          </div>
          <div class="flex items-center space-x-2">
            <input type="checkbox" id="option3" name="onboarding-option" class="custom-checkbox">
            <label for="option3">Option 3</label>
          </div>
        </div>
        <button onclick="showTechQuestion()" class="mt-6 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300">
          Proceed
        </button>
      </div>

      <div id="tech-question" class="hidden">
        <h3 class="text-xl font-bold mb-4">What technology?</h3>
        <div class="flex flex-wrap gap-4">
          <%= for tech <- ["TypeScript", "Scala", "Ruby", "Golang", "Elixir", "PHP", "Rust"] do %>
            <div class="flex items-center">
              <input type="checkbox" id={"tech-#{String.downcase(tech)}"} name="tech-option" class="custom-checkbox">
              <label for={"tech-#{String.downcase(tech)}"} class="ml-2"><%= tech %></label>
            </div>
          <% end %>
        </div>
        <button onclick="showThirdQuestion()" class="mt-6 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300">
          Proceed
        </button>
      </div>

      <div id="third-question" class="hidden">
        <h3 class="text-xl font-bold mb-4">Great! We've found some matches for you.</h3>
        <p id="match-count" class="text-lg mb-4"></p>
        <div id="match-list" class="space-y-4 mb-6"></div>
        
        <h4 class="text-lg font-semibold mb-2">Enter your email to see all matches:</h4>
        <input type="email" id="email-input" placeholder="Enter your email" class="w-full px-3 py-2 bg-gray-800 text-white rounded mb-4">
        
        <button onclick="finalSubmit()" class="mt-2 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300">
          Submit
        </button>
      </div>
    </div>
  </div>
  
  <div class="md:w-1/2 flex overflow-hidden relative p-6" style="height: 500px;">
    <div class="absolute rotate-[9deg] inset-0 bg-gradient-to-b from-transparent from-95% to-gray-900 z-10"></div>
    <div class="absolute rotate-[9deg] inset-0 bg-gradient-to-t from-transparent from-95% to-gray-900 z-10"></div>
    <%= for column <- [0, 1] do %>
      <div class="w-1/2 rotate-[9deg] flex flex-col space-y-6 overflow-hidden px-3">
        <%= for {company, index} <- Enum.with_index([
          {"substack", "bg-blue-400", "$7,809,219", "6,688", "al6z", "ðŸ‡ºðŸ‡¸"},
          {"Synthesis", "bg-blue-200", "$4,999,989", "1,440", "al6z", "ðŸ‡¬ðŸ‡§"},
          {"curlmix", "bg-green-200", "$4,537,310", "6,948", "Backstage Capital", "ðŸ‡¨ðŸ‡¦"},
          {"MERCURY", "bg-yellow-300", "$4,914,037", "2,453", "al6z", "ðŸ‡©ðŸ‡ª"},
          {"TechNova", "bg-purple-300", "$3,250,000", "1,875", "Sequoia", "ðŸ‡®ðŸ‡³"},
          {"GreenLeaf", "bg-green-400", "$5,120,500", "3,210", "Accel", "ðŸ‡¦ðŸ‡º"},
          {"DataFlow", "bg-blue-500", "$6,750,000", "4,500", "Andreessen Horowitz", "ðŸ‡¸ðŸ‡¬"},
          {"RoboTech", "bg-red-300", "$2,980,000", "2,100", "Kleiner Perkins", "ðŸ‡¯ðŸ‡µ"}
        ]) do %>
          <%= if rem(index, 2) == column do %>
            <div class={[
              "rounded-xl shadow-lg transition duration-300",
              elem(company, 1),
              "animate-carousel",
              if(column == 0, do: "animate-up", else: "animate-down")
            ]} style="height: 280px;">
              <div class="p-3 flex flex-col h-full">
                <div class="flex justify-between items-start mb-2">
                  <h3 class="text-sm font-bold"><%= elem(company, 0) %></h3>
                  <div class="flex items-center">
                    <span class="mr-1 text-lg"><%= elem(company, 5) %></span>
                    <img src={"https://ui-avatars.com/api/?name=#{elem(company, 0)}&background=fff&color=000&size=24"} alt="Company logo" class="w-6 h-6 rounded">
                  </div>
                </div>
                <div class="mb-2 flex-grow">
                  <img src={"https://picsum.photos/seed/#{elem(company, 0)}/200/100"} alt="Founder" class="w-full h-24 object-cover rounded">
                </div>
                <div class="flex justify-between text-xs mb-1">
                  <div>
                    <p class="font-semibold"><%= elem(company, 2) %></p>
                    <p class="text-gray-300">invested</p>
                  </div>
                  <div class="text-right">
                    <p class="font-semibold"><%= elem(company, 3) %></p>
                    <p class="text-gray-300">investors</p>
                  </div>
                </div>
                <div class="bg-white bg-opacity-20 px-2 py-1 rounded">
                  <p class="text-xs text-white"><%= elem(company, 4) %> co-invested</p>
                </div>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </div>
</section>

<style>
  @keyframes moveUp {
    0% { transform: translateY(0); }
    100% { transform: translateY(-100%); }
  }

  @keyframes moveDown {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(0); }
  }

  .animate-carousel {
    animation-duration: 30s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }

  .animate-up {
    animation-name: moveUp;
  }

  .animate-down {
    animation-name: moveDown;
  }
</style>

<main>
  <!-- Main content will go here -->
</main>

<aside>
  <!-- Sidebar content will go here -->
</aside>

<script>
  function showOnboarding(type) {
    document.getElementById('button-container').classList.add('hidden');
    document.getElementById('onboarding-section').classList.remove('hidden');
    // You can use the 'type' parameter to customize the onboarding for companies or developers
  }

  function showTechQuestion() {
    const selectedOptions = Array.from(document.querySelectorAll('input[name="onboarding-option"]:checked'))
      .map(checkbox => checkbox.id);
    console.log('Selected options:', selectedOptions);
    
    document.getElementById('first-question').classList.add('hidden');
    document.getElementById('tech-question').classList.remove('hidden');
  }

  function showThirdQuestion() {
    const selectedTech = Array.from(document.querySelectorAll('input[name="tech-option"]:checked'))
      .map(checkbox => checkbox.id.replace('tech-', ''));
    
    if (selectedTech.length === 0) {
      alert("Please select at least one technology.");
      return;
    }

    console.log('Selected technologies:', selectedTech);
    
    // Generate and display matches
    const matches = generateFakeMatches(selectedTech);
    displayMatches(matches);
    
    document.getElementById('tech-question').classList.add('hidden');
    document.getElementById('third-question').classList.remove('hidden');
  }

  function generateFakeMatches(technologies) {
    const matchCount = Math.floor(Math.random() * 20) + 5;
    const matches = [];
    for (let i = 0; i < 3; i++) {
      matches.push({
        name: `Project ${i + 1}`,
        description: `A ${technologies[i % technologies.length]} project looking for contributors.`
      });
    }
    return { count: matchCount, sampleMatches: matches };
  }

  function displayMatches(matches) {
    document.getElementById('match-count').textContent = `We found ${matches.count} potential matches for you!`;
    
    const matchList = document.getElementById('match-list');
    matchList.innerHTML = ''; // Clear existing matches
    matches.sampleMatches.forEach(match => {
      const matchElement = document.createElement('div');
      matchElement.className = 'bg-gray-800 p-4 rounded';
      matchElement.innerHTML = `
        <h5 class="font-semibold">${match.name}</h5>
        <p>${match.description}</p>
      `;
      matchList.appendChild(matchElement);
    });
  }

  function finalSubmit() {
    const email = document.getElementById('email-input').value;
    if (!email) {
      alert('Please enter a valid email address.');
      return;
    }

    const finalData = {
      selectedOptions: Array.from(document.querySelectorAll('input[name="onboarding-option"]:checked'))
        .map(checkbox => checkbox.id),
      selectedTechnologies: Array.from(document.querySelectorAll('input[name="tech-option"]:checked'))
        .map(checkbox => checkbox.id.replace('tech-', '')),
      email: email,
      matchCount: parseInt(document.getElementById('match-count').textContent.match(/\d+/)[0])
    };

    console.log('Submitting final data:', finalData);

    // Send data to the server (example using fetch API)
    fetch('/api/onboarding', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(finalData),
    })
    .then(response => response.json())
    .then(result => {
      console.log('Success:', result);
      // Redirect to dashboard
      window.location.href = '/dashboard';
    })
    .catch((error) => {
      console.error('Error:', error);
      alert('An error occurred. Please try again.');
    });

    // Show loading message
    document.getElementById('third-question').classList.add('hidden');
    const loadingMessage = document.createElement('div');
    loadingMessage.textContent = 'Processing your selections...';
    loadingMessage.className = 'text-white text-xl mt-8';
    document.getElementById('onboarding-section').appendChild(loadingMessage);
  }
</script>
